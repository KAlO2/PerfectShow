// yaw00_lev0_p16_hat.mh: machine generated HAT descriptor matcher
//
// Command: tasm -d tasmout_muct77 ../tasm/shapes/muct77.shape 0 0 [abde]

#ifndef STASM_YAW00_LEV0_P16_HAT_MH
#define STASM_YAW00_LEV0_P16_HAT_MH

namespace stasm {

// static const int EYEMOUTH_DIST = 100;
// static const double PYR_RATIO = 2;

static double linmod(
    const double* const x,
    const double        intercept,
    const double* const coef,
    const int           n)
{
    double yhat = intercept;
#if 0                               // unoptimized
    for (int i = 0; i < n; i++)
        yhat += coef[i] * x[i];
#else                               // optimized
    const int n4 = n - 4;
    int i = 0;
    if (n4 > 0)
    {
        for (; i < n4; i += 4)
            yhat += coef[i]   * x[i]   +
                    coef[i+1] * x[i+1] +
                    coef[i+2] * x[i+2] +
                    coef[i+3] * x[i+3];
    }
    for (; i < n; i++)
        yhat += coef[i] * x[i];
#endif
    return yhat;
}

static double yaw00_lev0_p16_hatfit(const double* const d) // d has 160 elements
{
const double intercept = 11.5493;

static const double coef[160] = // linear regression coefficients
{
    0.00673154, -0.392712, -0.167036, -0.233721, -0.1598, -0.795145, 0.425161, -0.000523254, -0.288837, 0.0514646, 0.222086,
    -0.358917, -0.0271212, -0.248658, 0.069205, -0.161704, -0.435895, -0.0203303, -0.306822, 0.493375, -0.0907361, 0.204941,
    0.124901, -0.525319, -0.358916, -0.430179, 0.24721, 0.212825, -0.605777, 0.103354, 0.309408, -0.757065, 0.256017,
    -0.223015, -0.110098, 0.406164, -0.223123, -0.371826, 0.782376, -0.301545, 0.400021, 0.383634, -0.598175, 0.635935,
    -0.145576, 0.312628, 0.258804, -0.40708, 0.0557313, 0.157675, 0.207802, -0.517805, 0.507723, -0.244158, -0.786935,
    -0.251392, 0.350585, -0.0766597, -0.0363516, -0.261384, 0.0266561, -0.0759173, -0.629874, 0.0248804, 0.308295, 0.145878,
    -0.269042, 0.263152, 0.23793, 0.0173884, -0.0266498, 0.632721, -0.406698, -0.222644, -0.00357539, -0.653465, 0.0152507,
    -0.427804, -0.229652, 0.0054667, -0.142471, 0.257617, -0.0314836, -0.106218, 0.36843, -0.464346, -0.333991, -0.260633,
    0.144948, 0.0281399, -0.0837656, 0.245056, -0.0337097, -0.162388, -0.394799, -0.223005, 0.11295, -0.253392, -0.396232,
    0.177307, 0.0903175, -0.123972, -0.021131, -0.214007, 0.341578, -0.318529, 0.249884, -0.213346, -0.331403, -0.0955309,
    0.192585, -0.260204, 0.372197, 0.228597, -0.412476, 0.0988221, -0.189287, -0.255393, -1.08763, -0.666582, 0.00719611,
    0.226467, -0.546233, -0.271637, -0.192614, 0.0390338, 0.377181, 0.139247, -0.268632, 0.105123, 0.207108, 0.160481,
    -0.260199, -0.0138192, 0.0523027, 0.558474, -0.0557368, -0.0849941, 0.282457, -0.185156, 0.065274, -0.0388149, -0.109538,
    0.0237536, -0.171302, -0.183332, 0.068313, -0.186879, -0.172688, -0.0864869, 0.295109, -0.0795578, 0.0301091, -0.181278,
    -0.456221, 0.288552, 0.314882, -0.310808, 0.472469, -0.597054
};
// negative below because lowest distance is best fit
return -linmod(d, intercept, coef, 160);
}

static const HatDescMod yaw00_lev0_p16_hat(yaw00_lev0_p16_hatfit);

} // namespace stasm
#endif // STASM_YAW00_LEV0_P16_HAT_MH
